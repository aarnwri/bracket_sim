#! /usr/bin/env ruby

require_relative '../lib/bin_helpers/bracket_cmd'
require_relative '../lib/bin_helpers/handler_list'
require_relative '../lib/bin_helpers/handler_create'
require_relative '../lib/bin_helpers/handler_update'
require_relative '../lib/bin_helpers/handler_export'
require_relative '../lib/bin_helpers/handler_delete'
require_relative '../lib/bin_helpers/handler_simulate'

require 'optparse'

global_subtext = <<HELP

Commonly used commands are:
    list     :    lists existing brackets
    create   :    creates a new bracket
    update   :    updates an existing bracket
    export   :    export content from an existing bracket
    delete   :    removes an existing bracket
    simulate :    simulate an existing bracket

See 'bracket.rb COMMAND --help' for more information on a specific command.

HELP

global_parser  = OptionParser.new do |opts|
  opts.banner = "Usage: bracket.rb [options] [COMMAND [options]]"
  opts.separator global_subtext
end

global_options = {}
global_parser.order!(into: global_options)
command = ARGV.shift

# TODO: Convert all handlers to commands, to simplify the Update Handler
handler = case command
# when "list"     then HandlerList.new
when "create"   then HandlerCreate.new
when "update"   then HandlerUpdate.new
when "export"   then HandlerExport.new
when "delete"   then HandlerDelete.new
when "simulate" then HandlerSimulate.new
else
  nil
end

if handler
  handler.handle_argv
  handler.handle_action
end

cmd_runner = case command
when "list" then BracketCmd::List.new
else
  nil
end

if cmd_runner
  cmd_runner.run
end
